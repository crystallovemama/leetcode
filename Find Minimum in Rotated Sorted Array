/*
Suppose a sorted array is rotated at some pivot unknown to you beforehand.

(i.e., 0 1 2 4 5 6 7 might become 4 5 6 7 0 1 2).

Find the minimum element.

You may assume no duplicate exists in the array.
*/
int findMin(vector<int>& nums) {
  if(nums.size()==0)
    return -1;
  int start = 0;
  int end = nums.size() - 1;
  int target = nums[nums.size()-1];
  while(start+1 < end){
    int mid = start + (end - start)/2;
    if(nums[mid] <= target){
      end = mid;
    }else{
      start = mid;
    }
  }
  return min(nums[start],nums[end]);
}
