/*
Given two integers n and k, return all possible combinations of k numbers out of 1 ... n.
For example,
If n = 4 and k = 2, a solution is:
[
  [2,4],
  [3,4],
  [2,3],
  [1,2],
  [1,3],
  [1,4],
]
*/
void combineHelper(vector<vector <int> > &result, vector<int> temp, int n, int k, int start ){
  if(temp.size() == k){
    result.push_back(temp);
    return;
  }
  for(int i = start;i <= n;i++){
    temp.push_back(i);
    combineHelper(result, temp, n, k, start+1)
    temp.pop_back();
  }
}
vector<vector<int> > combine(int n, int k){
  vector<vector <int> > result;
  if(n<k || n<1 || k<1)return result;
  vector<int> temp;
  combineHelper(result, temp, n, k, 1);
  return result;
}
